# Generated by Django 3.2 on 2022-12-06 05:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('board_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField(blank=True, null=True)),
                ('up', models.IntegerField(blank=True, null=True)),
                ('down', models.IntegerField(blank=True, null=True)),
                ('writer', models.CharField(blank=True, max_length=30, null=True)),
                ('regdatetime', models.DateTimeField(blank=True, null=True)),
                ('updatedateitme', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'board',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BoardFile',
            fields=[
                ('board_id', models.IntegerField(primary_key=True, serialize=False)),
                ('seq', models.IntegerField()),
                ('file_path', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'board_file',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('room_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'chat_room',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CodeMaster',
            fields=[
                ('class_field', models.CharField(db_column='class', max_length=3, primary_key=True, serialize=False)),
                ('clas_name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'code_master',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Designer',
            fields=[
                ('designer_id', models.AutoField(primary_key=True, serialize=False)),
                ('designer', models.CharField(max_length=5)),
                ('hp', models.CharField(max_length=20)),
                ('remark', models.TextField(blank=True, null=True)),
                ('regdatetime', models.DateTimeField(blank=True, null=True)),
                ('updatedatetime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'designer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('model_id', models.AutoField(primary_key=True, serialize=False)),
                ('version', models.CharField(blank=True, max_length=10, null=True)),
                ('file_path', models.CharField(blank=True, max_length=50, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('regdatetime', models.DateTimeField(blank=True, null=True)),
                ('updatedatetime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'model',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('reserv_id', models.AutoField(primary_key=True, serialize=False)),
                ('reserv_date', models.DateField(blank=True, null=True)),
                ('reserv_time', models.TimeField(blank=True, null=True)),
                ('reserv_name', models.CharField(blank=True, max_length=5, null=True)),
                ('reserv_type', models.CharField(blank=True, max_length=3, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('regdatetime', models.DateTimeField(blank=True, null=True)),
                ('updatedatetime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'reservation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('shop_id', models.AutoField(primary_key=True, serialize=False)),
                ('bizno', models.CharField(max_length=10)),
                ('shop_name', models.CharField(max_length=50)),
                ('ceo', models.CharField(max_length=5)),
                ('zip_code', models.CharField(max_length=6)),
                ('addr', models.CharField(max_length=200)),
                ('addr_det', models.CharField(max_length=200)),
                ('hp', models.CharField(max_length=20)),
                ('startdate', models.DateField(blank=True, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('regdatetime', models.DateTimeField(blank=True, null=True)),
                ('updatedatetime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'shop',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userinfo',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_pw', models.CharField(max_length=30)),
                ('user_name', models.CharField(max_length=10)),
                ('email', models.CharField(max_length=100)),
                ('hp', models.CharField(max_length=20)),
                ('user_type', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'userinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserinfoDetail',
            fields=[
                ('user_id', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('skin_condition', models.CharField(blank=True, max_length=3, null=True)),
                ('hair_bold', models.CharField(blank=True, max_length=3, null=True)),
                ('curl', models.CharField(blank=True, max_length=3, null=True)),
                ('hair_condition', models.CharField(blank=True, max_length=3, null=True)),
                ('thick_hair', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'userinfo_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AgreeInfo',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.userinfo')),
                ('agree_yn', models.CharField(blank=True, db_column='AGREE_YN', max_length=1, null=True)),
                ('agree_type', models.CharField(blank=True, db_column='AGREE_TYPE', max_length=1, null=True)),
                ('agree_date', models.DateField(blank=True, db_column='AGREE_DATE', null=True)),
                ('expire_date', models.DateField(blank=True, db_column='EXPIRE_DATE', null=True)),
            ],
            options={
                'db_table': 'agree_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BoardReview',
            fields=[
                ('board', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.board')),
                ('seq', models.IntegerField()),
                ('writer', models.CharField(blank=True, max_length=30, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('regdatetime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'board_review',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChatDetail',
            fields=[
                ('room', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.chatroom')),
                ('seq', models.IntegerField()),
                ('writer', models.CharField(blank=True, max_length=30, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('writedatetime', models.DateTimeField(blank=True, null=True)),
                ('read_type', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'chat_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CodeDetail',
            fields=[
                ('class_field', models.OneToOneField(db_column='class', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.codemaster')),
                ('clas_code', models.CharField(max_length=3)),
                ('code_name', models.CharField(max_length=20)),
                ('remark', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'code_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Priceinfo',
            fields=[
                ('shop', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.shop')),
                ('category', models.CharField(blank=True, max_length=30, null=True)),
                ('style', models.CharField(blank=True, max_length=50, null=True)),
                ('price', models.IntegerField(blank=True, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('regdatetime', models.DateTimeField(blank=True, null=True)),
                ('updatedatetime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'priceinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecommendHair',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.userinfo')),
                ('seq', models.IntegerField(blank=True, null=True)),
                ('heart', models.FloatField(blank=True, db_column='Heart', null=True)),
                ('oblong', models.FloatField(blank=True, db_column='Oblong', null=True)),
                ('round', models.FloatField(blank=True, db_column='Round', null=True)),
                ('square', models.FloatField(blank=True, db_column='Square', null=True)),
                ('oval', models.FloatField(blank=True, db_column='Oval', null=True)),
                ('hair1', models.CharField(blank=True, max_length=10, null=True)),
                ('hair2', models.CharField(blank=True, max_length=10, null=True)),
                ('hair3', models.CharField(blank=True, max_length=10, null=True)),
                ('hair4', models.CharField(blank=True, max_length=10, null=True)),
                ('hair5', models.CharField(blank=True, max_length=10, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('regdatetime', models.DateTimeField(blank=True, null=True)),
                ('updatedatetime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recommend_hair',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReservReview',
            fields=[
                ('reserv', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.reservation')),
                ('star', models.IntegerField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('writer', models.CharField(blank=True, max_length=3, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('regdatetime', models.DateTimeField(blank=True, null=True)),
                ('updatedatetime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'reserv_review',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReservReviewFile',
            fields=[
                ('reserv', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.reservation')),
                ('file_path', models.CharField(blank=True, max_length=50, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('regdatetime', models.DateTimeField(blank=True, null=True)),
                ('updatedatetime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'reserv_review_file',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReservReviewTag',
            fields=[
                ('reserv', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.reservation')),
                ('seq', models.IntegerField()),
                ('tag', models.CharField(blank=True, max_length=3, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('regdatetime', models.DateTimeField(blank=True, null=True)),
                ('updatedatetime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'reserv_review_tag',
                'managed': False,
            },
        ),
    ]
